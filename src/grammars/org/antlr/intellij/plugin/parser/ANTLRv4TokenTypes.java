package org.antlr.intellij.plugin.parser;

import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;
import com.intellij.psi.tree.TokenSet;
import org.antlr.intellij.plugin.ANTLRv4TokenType;

public class ANTLRv4TokenTypes {
    public static IElementType WHITE_SPACE = TokenType.WHITE_SPACE;
    public static IElementType BAD_CHARACTER = TokenType.BAD_CHARACTER;

    public static ANTLRv4TokenType EOF = new ANTLRv4TokenType("EOF");
    public static ANTLRv4TokenType TOKEN_REF = new ANTLRv4TokenType("TOKEN_REF");
    public static ANTLRv4TokenType RULE_REF = new ANTLRv4TokenType("RULE_REF");
    public static ANTLRv4TokenType LEXER_CHAR_SET = new ANTLRv4TokenType("LEXER_CHAR_SET");
    public static ANTLRv4TokenType DOC_COMMENT = new ANTLRv4TokenType("DOC_COMMENT");
    public static ANTLRv4TokenType BLOCK_COMMENT = new ANTLRv4TokenType("BLOCK_COMMENT");
    public static ANTLRv4TokenType LINE_COMMENT = new ANTLRv4TokenType("LINE_COMMENT");
    public static ANTLRv4TokenType DOUBLE_QUOTE_STRING_LITERAL = new ANTLRv4TokenType("DOUBLE_QUOTE_STRING_LITERAL");
    public static ANTLRv4TokenType BEGIN_ARG_ACTION = new ANTLRv4TokenType("BEGIN_ARG_ACTION");
    public static ANTLRv4TokenType OPTIONS = new ANTLRv4TokenType("OPTIONS");
    public static ANTLRv4TokenType TOKENS = new ANTLRv4TokenType("TOKENS");
    public static ANTLRv4TokenType IMPORT = new ANTLRv4TokenType("IMPORT");
    public static ANTLRv4TokenType FRAGMENT = new ANTLRv4TokenType("FRAGMENT");
    public static ANTLRv4TokenType LEXER = new ANTLRv4TokenType("LEXER");
    public static ANTLRv4TokenType PARSER = new ANTLRv4TokenType("PARSER");
    public static ANTLRv4TokenType GRAMMAR = new ANTLRv4TokenType("GRAMMAR");
    public static ANTLRv4TokenType PROTECTED = new ANTLRv4TokenType("PROTECTED");
    public static ANTLRv4TokenType PUBLIC = new ANTLRv4TokenType("PUBLIC");
    public static ANTLRv4TokenType PRIVATE = new ANTLRv4TokenType("PRIVATE");
    public static ANTLRv4TokenType RETURNS = new ANTLRv4TokenType("RETURNS");
    public static ANTLRv4TokenType LOCALS = new ANTLRv4TokenType("LOCALS");
    public static ANTLRv4TokenType THROWS = new ANTLRv4TokenType("THROWS");
    public static ANTLRv4TokenType CATCH = new ANTLRv4TokenType("CATCH");
    public static ANTLRv4TokenType FINALLY = new ANTLRv4TokenType("FINALLY");
    public static ANTLRv4TokenType MODE = new ANTLRv4TokenType("MODE");
    public static ANTLRv4TokenType COLON = new ANTLRv4TokenType("COLON");
    public static ANTLRv4TokenType COLONCOLON = new ANTLRv4TokenType("COLONCOLON");
    public static ANTLRv4TokenType COMMA = new ANTLRv4TokenType("COMMA");
    public static ANTLRv4TokenType SEMI = new ANTLRv4TokenType("SEMI");
    public static ANTLRv4TokenType LPAREN = new ANTLRv4TokenType("LPAREN");
    public static ANTLRv4TokenType RPAREN = new ANTLRv4TokenType("RPAREN");
    public static ANTLRv4TokenType RARROW = new ANTLRv4TokenType("RARROW");
    public static ANTLRv4TokenType LT = new ANTLRv4TokenType("LT");
    public static ANTLRv4TokenType GT = new ANTLRv4TokenType("GT");
    public static ANTLRv4TokenType ASSIGN = new ANTLRv4TokenType("ASSIGN");
    public static ANTLRv4TokenType QUESTION = new ANTLRv4TokenType("QUESTION");
    public static ANTLRv4TokenType STAR = new ANTLRv4TokenType("STAR");
    public static ANTLRv4TokenType PLUS = new ANTLRv4TokenType("PLUS");
    public static ANTLRv4TokenType PLUS_ASSIGN = new ANTLRv4TokenType("PLUS_ASSIGN");
    public static ANTLRv4TokenType OR = new ANTLRv4TokenType("OR");
    public static ANTLRv4TokenType DOLLAR = new ANTLRv4TokenType("DOLLAR");
    public static ANTLRv4TokenType DOT = new ANTLRv4TokenType("DOT");
    public static ANTLRv4TokenType RANGE = new ANTLRv4TokenType("RANGE");
    public static ANTLRv4TokenType AT = new ANTLRv4TokenType("AT");
    public static ANTLRv4TokenType POUND = new ANTLRv4TokenType("POUND");
    public static ANTLRv4TokenType NOT = new ANTLRv4TokenType("NOT");
    public static ANTLRv4TokenType RBRACE = new ANTLRv4TokenType("RBRACE");
    public static ANTLRv4TokenType ID = new ANTLRv4TokenType("ID");
    public static ANTLRv4TokenType INT = new ANTLRv4TokenType("INT");
    public static ANTLRv4TokenType STRING_LITERAL = new ANTLRv4TokenType("STRING_LITERAL");
    public static ANTLRv4TokenType WS = new ANTLRv4TokenType("WS");
    public static ANTLRv4TokenType ERRCHAR = new ANTLRv4TokenType("ERRCHAR");
    public static ANTLRv4TokenType ARG_ACTION = new ANTLRv4TokenType("ARG_ACTION");
    public static ANTLRv4TokenType ACTION = new ANTLRv4TokenType("ACTION");
    public static ANTLRv4TokenType BEGIN_ACTION = new ANTLRv4TokenType("BEGIN_ACTION");

    public static TokenSet COMMENTS = TokenSet.create(DOC_COMMENT,BLOCK_COMMENT,LINE_COMMENT);
    public static TokenSet WHITESPACES = TokenSet.create(WS);

    public static IElementType[] typeIDEATokenType = new IElementType[1154+1];

    static {
    	typeIDEATokenType[ANTLRv4Lexer.TOKEN_REF] = TOKEN_REF;
    	typeIDEATokenType[ANTLRv4Lexer.RULE_REF] = RULE_REF;
    	typeIDEATokenType[ANTLRv4Lexer.LEXER_CHAR_SET] = LEXER_CHAR_SET;
    	typeIDEATokenType[ANTLRv4Lexer.DOC_COMMENT] = DOC_COMMENT;
    	typeIDEATokenType[ANTLRv4Lexer.BLOCK_COMMENT] = BLOCK_COMMENT;
    	typeIDEATokenType[ANTLRv4Lexer.LINE_COMMENT] = LINE_COMMENT;
    	typeIDEATokenType[ANTLRv4Lexer.DOUBLE_QUOTE_STRING_LITERAL] = DOUBLE_QUOTE_STRING_LITERAL;
    	typeIDEATokenType[ANTLRv4Lexer.BEGIN_ARG_ACTION] = BEGIN_ARG_ACTION;
    	typeIDEATokenType[ANTLRv4Lexer.OPTIONS] = OPTIONS;
    	typeIDEATokenType[ANTLRv4Lexer.TOKENS] = TOKENS;
    	typeIDEATokenType[ANTLRv4Lexer.IMPORT] = IMPORT;
    	typeIDEATokenType[ANTLRv4Lexer.FRAGMENT] = FRAGMENT;
    	typeIDEATokenType[ANTLRv4Lexer.LEXER] = LEXER;
    	typeIDEATokenType[ANTLRv4Lexer.PARSER] = PARSER;
    	typeIDEATokenType[ANTLRv4Lexer.GRAMMAR] = GRAMMAR;
    	typeIDEATokenType[ANTLRv4Lexer.PROTECTED] = PROTECTED;
    	typeIDEATokenType[ANTLRv4Lexer.PUBLIC] = PUBLIC;
    	typeIDEATokenType[ANTLRv4Lexer.PRIVATE] = PRIVATE;
    	typeIDEATokenType[ANTLRv4Lexer.RETURNS] = RETURNS;
    	typeIDEATokenType[ANTLRv4Lexer.LOCALS] = LOCALS;
    	typeIDEATokenType[ANTLRv4Lexer.THROWS] = THROWS;
    	typeIDEATokenType[ANTLRv4Lexer.CATCH] = CATCH;
    	typeIDEATokenType[ANTLRv4Lexer.FINALLY] = FINALLY;
    	typeIDEATokenType[ANTLRv4Lexer.MODE] = MODE;
    	typeIDEATokenType[ANTLRv4Lexer.COLON] = COLON;
    	typeIDEATokenType[ANTLRv4Lexer.COLONCOLON] = COLONCOLON;
    	typeIDEATokenType[ANTLRv4Lexer.COMMA] = COMMA;
    	typeIDEATokenType[ANTLRv4Lexer.SEMI] = SEMI;
    	typeIDEATokenType[ANTLRv4Lexer.LPAREN] = LPAREN;
    	typeIDEATokenType[ANTLRv4Lexer.RPAREN] = RPAREN;
    	typeIDEATokenType[ANTLRv4Lexer.RARROW] = RARROW;
    	typeIDEATokenType[ANTLRv4Lexer.LT] = LT;
    	typeIDEATokenType[ANTLRv4Lexer.GT] = GT;
    	typeIDEATokenType[ANTLRv4Lexer.ASSIGN] = ASSIGN;
    	typeIDEATokenType[ANTLRv4Lexer.QUESTION] = QUESTION;
    	typeIDEATokenType[ANTLRv4Lexer.STAR] = STAR;
    	typeIDEATokenType[ANTLRv4Lexer.PLUS] = PLUS;
    	typeIDEATokenType[ANTLRv4Lexer.PLUS_ASSIGN] = PLUS_ASSIGN;
    	typeIDEATokenType[ANTLRv4Lexer.OR] = OR;
    	typeIDEATokenType[ANTLRv4Lexer.DOLLAR] = DOLLAR;
    	typeIDEATokenType[ANTLRv4Lexer.DOT] = DOT;
    	typeIDEATokenType[ANTLRv4Lexer.RANGE] = RANGE;
    	typeIDEATokenType[ANTLRv4Lexer.AT] = AT;
    	typeIDEATokenType[ANTLRv4Lexer.POUND] = POUND;
    	typeIDEATokenType[ANTLRv4Lexer.NOT] = NOT;
    	typeIDEATokenType[ANTLRv4Lexer.RBRACE] = RBRACE;
    	typeIDEATokenType[ANTLRv4Lexer.ID] = ID;
    	typeIDEATokenType[ANTLRv4Lexer.INT] = INT;
    	typeIDEATokenType[ANTLRv4Lexer.STRING_LITERAL] = STRING_LITERAL;
    	typeIDEATokenType[ANTLRv4Lexer.WS] = WS;
    	typeIDEATokenType[ANTLRv4Lexer.ERRCHAR] = ERRCHAR;
    	typeIDEATokenType[ANTLRv4Lexer.ARG_ACTION] = ARG_ACTION;
    	typeIDEATokenType[ANTLRv4Lexer.ACTION] = ACTION;
    	typeIDEATokenType[ANTLRv4Lexer.BEGIN_ACTION] = BEGIN_ACTION;
    }
}
